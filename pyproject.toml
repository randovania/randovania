[build-system]
requires = [
    "setuptools>=64",
    "setuptools_scm>=8",
    "pyqt-distutils>=0.7.3",
    "wheel>=0.37.0",
    "dulwich",
    "randovania-scm-version-schema",
    "PySide6-Essentials>=6.5",
]
build-backend = "setuptools.build_meta"

[project]
name = "randovania"
authors = [
    {name = "Henrique Gemignani Passos Lima"},
]
description = "A randomizer platform for a multitude of games."
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: Win32 (MS Windows)",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
]
requires-python = ">=3.12"
dynamic = ["version"]

dependencies = [
    # server communication, binary version of logic db
    "construct",

    # Default name for exporting presets
    "python-slugify",

    # permalinks
    "bitstruct",

    # obfuscator, guest login, server code
    "cryptography",

    # Generator
    "networkx",
    "tenacity>=7.0.0",

    # server communication
    "python-socketio[asyncio_client]",
    "aiohttp>=3.9.3",

    # nonblocking file IO
    "aiofiles",

    # Immutable dicts, used in many places
    "frozendict",

    # Versioning presets
    "dulwich>=0.20",

    # error reports
    "sentry-sdk",

    # Patch GamesPatches JSON from rdvgame
    "json-delta",

    # For the Version class
    "packaging",

    # For TypeVar default
    "typing-extensions>=4.4.0",
]

[project.optional-dependencies]
exporters = [
    # AM2R
    "am2r-yams>=2.8.1",

    # Cave Story
    "cave-story-randomizer>=2.4.2",
    "tsc-utils>=0.2.5",

    # Factorio
    "factorio-randovania-mod>=0.8.0",

    # Metroid Dread
    "open-dread-rando>=2.16.0",

    # Metroid fusion
    "mars-patcher>=0.3.2",

    # Metroid Planets
    "planets-yapr>=1.0.0",

    # Metroid Prime 1
    "py_randomprime>=1.27.0",
    "random-enemy-attributes>=1.0.3",

    # Metroid Prime 1/2
    "ppc-asm>=1.2.1",
    "open-prime-rando>=0.13.0",
    "retro-data-structures>=0.24.0",

    # Metroid Prime 2
    "mp2hudcolor>=1.0.10",

    # Metroid: Samus Returns
    "open-samus-returns-rando>=3.1.1",
]

gui = [
    "PySide6-Essentials>=6.5",
    "pyqtdarktheme-fork>=2.3.0",
    "markdown",
    "qasync",
    "natsort",
    "appdirs",
    # Minimum version compatible with PySide 6.4. 3.6 is also needed for Python 3.11
    "matplotlib>=3.6.2",
    "humanize", # formatting dates
    "nod>=1.9",
    "async-wiiload",
    "dolphin-memory-engine>=1.0.2",
    "pid>=3.0.0",
    "qrcode[pil]>=8.0",
]

server = [
    "sentry-sdk[flask]",
    "flask-discord",
    "flask-socketio",
    "prometheus-flask-exporter",
    "eventlet",
    "peewee",
    "requests-oauthlib",
    "cachetools",  # for TTLCache

    "py-cord>=2.3.1",  # for randovania/server/discord; 2.3.1+ is needed for Python 3.11
    "audioop-lts; python_version>='3.13'",  # for py-cord
    "Pillow>=9.0.0",  # for randovania/server/discord/database_command
    "graphviz",  # for randovania/server/discord/database_command
]

test = [
    "pytest",
    "pytest-cov",
    "pytest-qt",
    "pytest-asyncio",
    "pytest-mock",
    "pytest-localftpserver",
    "pytest-xdist[psutil]",
    "pytest-codspeed",
]

website = [
    "htmlmin2",
    "ruamel.yaml",
]

[dependency-groups]
installer = [
    "pyinstaller",
    "pyinstaller-hooks-contrib",
]

typing = [
    "mypy",
    "types-aiofiles",
    "types-peewee",
    "types-qrcode>=8.0.0.20241004",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/randovania/randovania"

[project.entry-points.console_scripts]
randovania = "randovania.__main__:main"

[tool.setuptools.packages.find]
include = ["randovania*"]

[tool.setuptools.package-data]
"randovania.data" = ["README.md"]

[tool.setuptools_scm]
local_scheme = "no-local-version"
version_file = "randovania/version.py"
version_scheme = "randovania_scm_version_schema:version_scheme"
git_describe_command = [
    "git",
    "describe",
    "--dirty",
    "--tags",
    "--long",
    "--match",
    "v[0-9]*",
]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E", "F", "W", "C90", "I", "UP", "C4",
    "RSE",
    "TCH",
    "PTH",
    "COM818", "COM819",
    "ISC",
    "PIE",
    "PT",

    "PLC",
    "PLC0208",  # iterating over set is also not deterministic, so we shouldn't do that!

    "PLE",
    "PLR0402", "PLR1711", "PLR1722", "PLR0206",
    "PLR0133", "PLR0124",
    "PLW",
    "SIM101",
]
extend-ignore = [
    "ISC001",  # may cause conflicts with formatter
    "PLW0603",  # we use some globals here and there
    "PLW2901",  # TODO: should actually fix these
]

[tool.ruff.lint.isort]
# This is very desirable, but causes issues with py-cord and some usages of construct_pack.encode
# required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 25.
# Defaults to 10, but we're being very flexible right now
max-complexity = 25

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = [
    "randovania.bitpacking.bitpacking.BitPackDataclass",
    "randovania.bitpacking.type_enforcement.DataclassPostInitTypeCheck",
    "randovania.bitpacking.json_dataclass.JsonDataclass",
    "randovania.layout.base.base_configuration.BaseConfiguration",
    "randovania.exporter.game_exporter.GameExportParams",
    "randovania.game_description.pickup.pickup_definition.base_pickup.BasePickupDefinition",
]

[tool.mypy]
files = [
    "randovania/bitpacking/",
    "randovania/cli/",
    "randovania/exporter/",
    "randovania/game/",
    "randovania/game_connection/",
    "randovania/game_description/",
    "randovania/games/am2r/gui/",
    "randovania/games/am2r/generator/",
    "randovania/games/am2r/layout/",
    "randovania/games/blank/",
    "randovania/games/cave_story/",
    "randovania/games/dread/exporter/hint_namer.py",
    "randovania/games/dread/gui/",
    "randovania/games/fusion/",
    "randovania/games/prime1/",
    "randovania/games/prime2/",
    "randovania/games/prime_hunters/",
    "randovania/games/samus_returns/",
    "randovania/generator/",
    "randovania/gui/main_online_interaction.py",
    "randovania/gui/data_editor.py",
    "randovania/gui/game_specific_gui.py",
    "randovania/gui/async_race_room_window.py",
    "randovania/gui/docks/resource_database_editor.py",
    "randovania/gui/dialog/async_race_creation_dialog.py",
    "randovania/gui/dialog/async_race_settings_dialog.py",
    "randovania/gui/dialog/async_race_admin_dialog.py",
    "randovania/gui/dialog/base_cosmetic_patches_dialog.py",
    "randovania/gui/dialog/connections_editor.py",
    "randovania/gui/dialog/connector_prompt_dialog.py",
    "randovania/gui/dialog/login_prompt_dialog.py",
    "randovania/gui/preset_settings/trick_level_tab.py",
    "randovania/gui/preset_settings/hints_tab.py",
    "randovania/gui/lib/editable_table_model.py",
    "randovania/gui/lib/pixmap_lib.py",
    "randovania/gui/lib/faq_lib.py",
    "randovania/gui/lib/signal_handling.py",
    "randovania/gui/lib/hints_text.py",
    "randovania/gui/lib/tracker_item_image.py",
    "randovania/gui/lib/data_editor_canvas.py",
    "randovania/gui/lib/connections_visualizer.py",
    "randovania/gui/widgets/async_race_room_settings_widget.py",
    "randovania/gui/widgets/game_connection_window.py",
    "randovania/gui/widgets/game_validator_widget.py",
    "randovania/gui/widgets/node_selector_widget.py",
    "randovania/layout/",
    "randovania/lib/",
    "test/bitpacking/",
    "test/game_connection",
    "test/game_description/",
    "test/games/test_game.py",
    "test/games/test_hashes.py",
    "test/games/test_prime_binary_decoder.py",
    "test/games/blank/",
    "test/games/cave_story/",
    "test/games/dread/",
    "test/games/prime1/gui/dialog/test_prime_cosmetic_patches_dialog.py",
    "test/games/prime2/",
    "test/games/samus_returns/",
    "test/generator/",
    "test/lib/",
    "test/gui/dialog/test_connections_editor.py",
    "test/gui/widgets/test_node_selector_widget.py",
]
follow_imports = "silent"
disallow_untyped_defs = true
local_partial_types = true
warn_unused_ignores = true
enable_error_code = [
    "ignore-without-code",
]

[[tool.mypy.overrides]]
module = "test.*"
disallow_untyped_defs = false
check_untyped_defs = true
disable_error_code = [
    "method-assign",
]

[[tool.mypy.overrides]]
module = "randovania.*.gui.generated.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
# any dependencies which we do not control but are missing types go here
# not too much can be done about these, so they're not the end of the world
# dependencies we DO control should use `type: ignore[import-untyped]`
module = [
    "bitstruct.*",
    "construct.*",
    "graphviz.*",
    "htmlmin.*",
    "json_delta.*",
    "networkx.*",
    "pid.*",
    "pytest_localftpserver.*",
    "pytestqt.*",
    "qasync.*",
    "ruamel.*",
]
ignore_missing_imports = true

[tool.uv]
cache-keys = [
    { git = { commit = true, tags = true } },
    { file = "pyproject.toml" },
    { file = "setup.py" },
    { file = "setup.cfg" },
    { file = "README.md" },
    { file = "pyuic.json" },
    { file = "**/*.ui" },

    # Listing these files forces uv to rebuild Randovania every time you run,
    # but otherwise it's not rebuilt when these are deleted.
    { file = "randovania/version.py" },
    { file = "randovania/version_hash.py" },
    { file = "randovania/data/README.md" },
]
