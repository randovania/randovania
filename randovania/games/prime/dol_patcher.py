from pathlib import Path
from typing import BinaryIO

from randovania.interface_common.cosmetic_patches import CosmeticPatches


def _apply_string_display_patch(binary_version: int, dol_file: BinaryIO):
    patch_for_binary_versions = {
        0x003A22A0: {
            "message_receiver_offset": 0x34E20,
            "message_receiver_string_ref": [0x80, 0x3a, 0x63, 0x80],
            "wstring_constructor": [0x80, 0x2f, 0xf3, 0xdc],
            "display_hud_memo": [0x80, 0x06, 0xb3, 0xc8],
        }
    }
    patches = patch_for_binary_versions[binary_version]

    message_receiver_string_ref = patches["message_receiver_string_ref"]
    address_wstring_constructor = patches["wstring_constructor"]
    address_display_hud_memo = patches["display_hud_memo"]

    message_receiver_patch = bytes([
        0x94, 0x21, 0xFF, 0xD4,
        0x7C, 0x08, 0x02, 0xA6,
        0x90, 0x01, 0x00, 0x30,
        0x88, 0x83, 0x00, 0x02,
        0x2C, 0x04, 0x00, 0x00,
        0x41, 0x82, 0x00, 0x60,
        0x38, 0xC0, 0x00, 0x00,
        0x98, 0xC3, 0x00, 0x02,
        0x3C, 0xA0, 0x41, 0x00,
        0x38, 0xE0, 0x00, 0x01,
        0x39, 0x20, 0x00, 0x09,
        0x90, 0xA1, 0x00, 0x10,
        0x98, 0xE1, 0x00, 0x14,
        0x98, 0xC1, 0x00, 0x15,
        0x98, 0xC1, 0x00, 0x16,
        0x98, 0xE1, 0x00, 0x17,
        0x91, 0x21, 0x00, 0x18,
        0x38, 0x61, 0x00, 0x1C,
        0x3C, 0x80, message_receiver_string_ref[0], message_receiver_string_ref[1],
        0x60, 0x84, message_receiver_string_ref[2], message_receiver_string_ref[3],
        0x3D, 0x80, address_wstring_constructor[0], address_wstring_constructor[1],
        0x61, 0x8C, address_wstring_constructor[2], address_wstring_constructor[3],
        0x7D, 0x89, 0x03, 0xA6,
        0x4E, 0x80, 0x04, 0x21,
        0x38, 0x81, 0x00, 0x10,
        0x3D, 0x80, address_display_hud_memo[0], address_display_hud_memo[1],
        0x61, 0x8C, address_display_hud_memo[2], address_display_hud_memo[3],
        0x7D, 0x89, 0x03, 0xA6,
        0x4E, 0x80, 0x04, 0x21,
        0x80, 0x01, 0x00, 0x30,
        0x7C, 0x08, 0x03, 0xA6,
        0x38, 0x21, 0x00, 0x2C,
        0x4E, 0x80, 0x00, 0x20,
    ])

    dol_file.seek(patches["message_receiver_offset"])
    dol_file.write(message_receiver_patch)


def apply_patches(game_root: Path, cosmetic_patches: CosmeticPatches):
    with game_root.joinpath("sys/main.dol").open("rb") as dol_file:
        dol_file.seek(0x1C)
        binary_version = int.from_bytes(dol_file.read(4), byteorder='big')

    with game_root.joinpath("sys/main.dol").open("r+b") as dol_file:
        _apply_string_display_patch(binary_version, dol_file)
